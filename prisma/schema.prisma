// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  username  String   @unique
  password  String
  createdAt DateTime @default(now())

  campaigns Campaign[]
}

model Campaign {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  links       Link[]
}

model Link {
  id          Int      @id @default(autoincrement())
  campaignId  Int // Foreign key to Campaign
  originalUrl String // The original long URL
  shortUrl    String   @unique // The shortened URL (unique)
  createdAt   DateTime @default(now())

  campaign Campaign @relation(fields: [campaignId], references: [id])

  analytics Analytics?
}

model Analytics {
  id           Int      @id @default(autoincrement())
  linkId       Int      @unique // Ensures one analytics entry per link
  clicks       Int      @default(0)
  lastAccessed DateTime @default(now())
  ipAddress    String
  country      String
  region       String
  city         String
  deviceType   String
  browser      String
  os           String
  updatedAt    DateTime @updatedAt // Tracks last update time
  link         Link     @relation(fields: [linkId], references: [id])
}
